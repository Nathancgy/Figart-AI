{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/allen/Desktop/Figart-AI/src/app/login/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\n\nexport default function LoginPage() {\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    // TODO: Implement authentication logic\n    console.log('Form submitted:', { email, password });\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-900 to-black py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8 bg-black/40 backdrop-blur-md p-8 rounded-2xl border border-white/10\">\n        <div>\n          <Link href=\"/\" className=\"flex justify-center mb-8\">\n            <h2 className=\"text-3xl font-bold text-white\">FigArt AI</h2>\n          </Link>\n          <h2 className=\"mt-6 text-center text-2xl font-semibold text-white\">\n            {isLogin ? 'Sign in to your account' : 'Create your account'}\n          </h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"rounded-md shadow-sm space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"sr-only\">\n                Email address\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                className=\"appearance-none relative block w-full px-3 py-2 border border-white/10 bg-black/20 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent placeholder-gray-400\"\n                placeholder=\"Email address\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete={isLogin ? \"current-password\" : \"new-password\"}\n                required\n                className=\"appearance-none relative block w-full px-3 py-2 border border-white/10 bg-black/20 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent placeholder-gray-400\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n          </div>\n\n          {isLogin && (\n            <div className=\"flex items-center justify-end\">\n              <div className=\"text-sm\">\n                <Link\n                  href=\"/forgot-password\"\n                  className=\"font-medium text-indigo-400 hover:text-indigo-300 transition-colors\"\n                >\n                  Forgot your password?\n                </Link>\n              </div>\n            </div>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors\"\n            >\n              {isLogin ? 'Sign in' : 'Sign up'}\n            </button>\n          </div>\n        </form>\n\n        <div className=\"text-center\">\n          <button\n            onClick={() => setIsLogin(!isLogin)}\n            className=\"font-medium text-indigo-400 hover:text-indigo-300 transition-colors\"\n          >\n            {isLogin\n              ? \"Don't have an account? Sign up\"\n              : 'Already have an account? Sign in'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,uCAAuC;QACvC,QAAQ,GAAG,CAAC,mBAAmB;YAAE;YAAO;QAAS;IACnD;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;;sCACC,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCACvB,cAAA,8OAAC;gCAAG,WAAU;0CAAgC;;;;;;;;;;;sCAEhD,8OAAC;4BAAG,WAAU;sCACX,UAAU,4BAA4B;;;;;;;;;;;;8BAG3C,8OAAC;oBAAK,WAAU;oBAAiB,UAAU;;sCACzC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDACC,8OAAC;4CAAM,SAAQ;4CAAQ,WAAU;sDAAU;;;;;;sDAG3C,8OAAC;4CACC,IAAG;4CACH,MAAK;4CACL,MAAK;4CACL,cAAa;4CACb,QAAQ;4CACR,WAAU;4CACV,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;8CAG5C,8OAAC;;sDACC,8OAAC;4CAAM,SAAQ;4CAAW,WAAU;sDAAU;;;;;;sDAG9C,8OAAC;4CACC,IAAG;4CACH,MAAK;4CACL,MAAK;4CACL,cAAc,UAAU,qBAAqB;4CAC7C,QAAQ;4CACR,WAAU;4CACV,aAAY;4CACZ,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;;;;;;;wBAKhD,yBACC,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCACH,MAAK;oCACL,WAAU;8CACX;;;;;;;;;;;;;;;;sCAOP,8OAAC;sCACC,cAAA,8OAAC;gCACC,MAAK;gCACL,WAAU;0CAET,UAAU,YAAY;;;;;;;;;;;;;;;;;8BAK7B,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBACC,SAAS,IAAM,WAAW,CAAC;wBAC3B,WAAU;kCAET,UACG,mCACA;;;;;;;;;;;;;;;;;;;;;;AAMhB","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}