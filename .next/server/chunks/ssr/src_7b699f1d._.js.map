{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nathanchen/Desktop/Projects/Figart-AI/Figart-AI/src/components/TutorialFrame.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { TutorialImage, Frame } from '@/types';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport Image from 'next/image';\n\ninterface TutorialFrameProps {\n  tutorialImage: TutorialImage;\n  onSubmit: (frame: Omit<Frame, 'id' | 'userId' | 'user' | 'createdAt' | 'likes'>) => Promise<void>;\n  optimalFrame?: { x: number; y: number; width: number; height: number };\n  popularFrame?: Frame;\n  isHorizontal?: boolean;\n}\n\nconst TutorialFrame: React.FC<TutorialFrameProps> = ({\n  tutorialImage,\n  onSubmit,\n  optimalFrame,\n  popularFrame,\n  isHorizontal = false,\n}) => {\n  const [step, setStep] = useState<'framing' | 'results'>('framing');\n  const [score, setScore] = useState<number | null>(null);\n  const [feedback, setFeedback] = useState<string | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showOriginal, setShowOriginal] = useState(false);\n  const [imagesLoaded, setImagesLoaded] = useState<Record<string, boolean>>({});\n  \n  const cropperRef = useRef<HTMLImageElement>(null);\n  const [cropData, setCropData] = useState({ \n    x: 0, \n    y: 0, \n    width: 0, \n    height: 0 \n  });\n  \n  // Aspect ratio (default is portrait orientation for mobile)\n  const aspectRatio = isHorizontal ? 16 / 9 : 9 / 16;\n  \n  const handleImageLoad = (imageId: string) => {\n    setImagesLoaded(prev => ({...prev, [imageId]: true}));\n  };\n  \n  // Reset state when the image changes\n  useEffect(() => {\n    setStep('framing');\n    setScore(null);\n    setFeedback(null);\n    setShowOriginal(false);\n    setImagesLoaded({});\n  }, [tutorialImage.id, isHorizontal]);\n  \n  // Preload the tutorial image\n  useEffect(() => {\n    if (tutorialImage && tutorialImage.imageUrl) {\n      const preloadImage = new window.Image();\n      preloadImage.src = tutorialImage.imageUrl;\n      preloadImage.onload = () => {\n        setImagesLoaded(prev => ({\n          ...prev,\n          'tutorial': true\n        }));\n      };\n    }\n  }, [tutorialImage]);\n  \n  // Set initial crop box dimensions when the cropper is ready\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      const cropper = (cropperRef.current as any)?.cropper;\n      if (cropper) {\n        // Set the initial crop box to match our standard dimensions\n        const containerData = cropper.getContainerData();\n        \n        // Calculate a scale factor to fit our standard dimensions in the container\n        const standardWidth = isHorizontal ? 667 : 375;\n        const standardHeight = isHorizontal ? 375 : 667;\n        \n        const scaleX = containerData.width / standardWidth;\n        const scaleY = containerData.height / standardHeight;\n        const scale = Math.min(scaleX, scaleY) * 0.8; // 80% of the fitting scale\n        \n        // Set crop box in the center with our standard dimensions\n        cropper.setCropBoxData({\n          left: (containerData.width - standardWidth * scale) / 2,\n          top: (containerData.height - standardHeight * scale) / 2,\n          width: standardWidth * scale,\n          height: standardHeight * scale\n        });\n      }\n    }, 500); // Small delay to ensure cropper is initialized\n    \n    return () => clearTimeout(timer);\n  }, [isHorizontal, tutorialImage.id]);\n  \n  // Handle the submission of the user's frame\n  const handleSubmit = async () => {\n    if (!cropperRef.current) return;\n    \n    setIsSubmitting(true);\n    \n    try {\n      // Get the cropper instance\n      const cropper = (cropperRef.current as any)?.cropper;\n      if (!cropper) return;\n      \n      // Get the cropping data\n      const data = cropper.getData();\n      \n      // Prepare the frame data\n      const frameData = {\n        originImageUrl: tutorialImage.imageUrl,\n        frameX: Math.round(data.x),\n        frameY: Math.round(data.y),\n        frameWidth: Math.round(data.width),\n        frameHeight: Math.round(data.height),\n      };\n      \n      // Save frame data\n      setCropData({\n        x: frameData.frameX,\n        y: frameData.frameY,\n        width: frameData.frameWidth,\n        height: frameData.frameHeight,\n      });\n      \n      // Submit the frame\n      await onSubmit(frameData);\n      \n      // Show the results\n      setStep('results');\n      \n      // Calculate score if optimal frame is available\n      if (optimalFrame) {\n        const imageWidth = cropperRef.current.naturalWidth;\n        const imageHeight = cropperRef.current.naturalHeight;\n        \n        // Calculate intersection area\n        const x1 = Math.max(frameData.frameX, optimalFrame.x);\n        const y1 = Math.max(frameData.frameY, optimalFrame.y);\n        const x2 = Math.min(frameData.frameX + frameData.frameWidth, optimalFrame.x + optimalFrame.width);\n        const y2 = Math.min(frameData.frameY + frameData.frameHeight, optimalFrame.y + optimalFrame.height);\n        \n        const intersectionWidth = Math.max(0, x2 - x1);\n        const intersectionHeight = Math.max(0, y2 - y1);\n        const intersectionArea = intersectionWidth * intersectionHeight;\n        \n        // Calculate union area\n        const userArea = frameData.frameWidth * frameData.frameHeight;\n        const optimalArea = optimalFrame.width * optimalFrame.height;\n        const unionArea = userArea + optimalArea - intersectionArea;\n        \n        // Calculate Intersection over Union (IoU)\n        const iou = intersectionArea / unionArea;\n        \n        // Calculate center point distances\n        const userCenterX = frameData.frameX + frameData.frameWidth / 2;\n        const userCenterY = frameData.frameY + frameData.frameHeight / 2;\n        const optimalCenterX = optimalFrame.x + optimalFrame.width / 2;\n        const optimalCenterY = optimalFrame.y + optimalFrame.height / 2;\n        \n        // Normalize distance by image dimensions\n        const distanceX = Math.abs(userCenterX - optimalCenterX) / imageWidth;\n        const distanceY = Math.abs(userCenterY - optimalCenterY) / imageHeight;\n        \n        const centerDistance = Math.sqrt(Math.pow(distanceX, 2) + Math.pow(distanceY, 2));\n        \n        // Score from 0 to 100\n        const calculatedScore = Math.round((iou * 0.7 + (1 - centerDistance) * 0.3) * 100);\n        setScore(calculatedScore);\n        \n        // Set feedback\n        if (calculatedScore >= 90) {\n          setFeedback(\"Excellent framing! Your eye for composition is spot on.\");\n        } else if (calculatedScore >= 75) {\n          setFeedback(\"Great job! Your frame is very close to the optimal composition.\");\n        } else if (calculatedScore >= 60) {\n          setFeedback(\"Good effort. Try adjusting your frame slightly for better composition.\");\n        } else if (calculatedScore >= 40) {\n          setFeedback(\"You're on the right track. Consider the rule of thirds and try again.\");\n        } else {\n          setFeedback(\"Keep practicing! Try focusing on the main subject of the image.\");\n        }\n      }\n    } catch (error) {\n      console.error('Error submitting frame:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  \n  const handleReset = () => {\n    setStep('framing');\n    setScore(null);\n    setFeedback(null);\n  };\n  \n  // Calculate the scale factor needed to display the frame properly\n  const getScaleFactor = (frameWidth: number, frameHeight: number, containerWidth: number, containerHeight: number) => {\n    // Calculate the scale needed to fit the frame in the container\n    const scaleX = containerWidth / frameWidth;\n    const scaleY = containerHeight / frameHeight;\n    // Use the smaller scale to ensure the entire frame fits\n    return Math.min(scaleX, scaleY);\n  };\n  \n  const renderFramedImage = (image: string, frame: { x: number; y: number; width: number; height: number }, alt: string, id: string) => {\n    // Use fixed container dimensions matching our standard frame size\n    const containerWidth = 375; // Standard mobile width\n    const containerHeight = 667; // Standard mobile height\n    \n    // Calculate scale factor\n    const scale = getScaleFactor(frame.width, frame.height, containerWidth, containerHeight);\n    \n    return (\n      <>\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black/40 backdrop-blur-sm\">\n          <div className=\"animate-pulse flex space-x-4\">\n            <div className=\"h-12 w-12 rounded-full bg-indigo-500/30\"></div>\n          </div>\n        </div>\n        <div className=\"absolute inset-0 overflow-hidden\">\n          <img\n            src={image}\n            alt={alt}\n            className=\"absolute origin-top-left\"\n            style={{\n              left: `${-frame.x * scale}px`,\n              top: `${-frame.y * scale}px`,\n              width: 'auto',\n              height: 'auto',\n              transform: `scale(${scale})`,\n              maxWidth: 'none',\n              maxHeight: 'none',\n            }}\n            onLoad={() => handleImageLoad(id)}\n          />\n        </div>\n        {!imagesLoaded[id] && (\n          <div className=\"absolute inset-0 flex items-center justify-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-indigo-500 border-t-transparent\"></div>\n          </div>\n        )}\n      </>\n    );\n  };\n  \n  return (\n    <div className=\"w-full mx-auto p-6\">\n      {step === 'framing' ? (\n        <div className=\"space-y-8\">\n          <div className=\"flex flex-col md:flex-row md:items-start gap-8\">\n            <div className=\"flex-1\">\n              <div className=\"glass-dark rounded-xl p-8 shadow-lg relative overflow-hidden\">\n                <div className=\"absolute -bottom-20 -left-20 w-60 h-60 bg-indigo-600 rounded-full mix-blend-screen filter blur-[80px] opacity-10\"></div>\n                \n                <h1 className=\"text-3xl font-bold mb-2 text-indigo-100 flex items-center\">\n                  <div className=\"w-2 h-8 bg-gradient-to-b from-indigo-400 to-purple-400 mr-4 rounded-full\"></div>\n                  {tutorialImage.title}\n                </h1>\n                {tutorialImage.description && (\n                  <p className=\"text-indigo-300 mb-6 text-lg\">\n                    {tutorialImage.description}\n                  </p>\n                )}\n                \n                <div className=\"border border-indigo-800/30 rounded-lg overflow-hidden shadow-lg glass\">\n                  <Cropper\n                    src={tutorialImage.imageUrl}\n                    style={{ height: 600, width: '100%' }}\n                    aspectRatio={aspectRatio}\n                    guides={true}\n                    ref={cropperRef}\n                    viewMode={1}\n                    dragMode=\"move\"\n                    autoCropArea={0.8}\n                    responsive={true}\n                    restore={false}\n                    highlight={false}\n                    cropBoxMovable={true}\n                    cropBoxResizable={true}\n                    zoomOnWheel={false}\n                  />\n                </div>\n                \n                <div className=\"flex justify-center mt-8\">\n                  <button\n                    onClick={handleSubmit}\n                    disabled={isSubmitting}\n                    className=\"px-8 py-4 relative bg-gradient-to-r from-indigo-600 to-purple-600 text-white text-lg rounded-xl shadow-lg transition-all duration-300 transform hover:scale-105 disabled:opacity-50 disabled:transform-none group\"\n                  >\n                    <span className=\"relative z-10\">\n                      {isSubmitting ? 'Analyzing...' : 'Submit Frame'}\n                    </span>\n                    <span className=\"absolute inset-0 rounded-xl bg-gradient-to-r from-indigo-600 to-purple-600 opacity-0 group-hover:opacity-75 blur transition-opacity duration-300\"></span>\n                  </button>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"md:w-1/3\">\n              <div className=\"glass-dark rounded-xl p-8 shadow-lg h-full relative overflow-hidden\">\n                <div className=\"absolute -top-20 -right-20 w-60 h-60 bg-purple-500 rounded-full mix-blend-screen filter blur-[80px] opacity-10\"></div>\n                \n                <h2 className=\"text-2xl font-bold mb-6 text-indigo-100 flex items-center\">\n                  <div className=\"w-2 h-8 bg-gradient-to-b from-purple-400 to-indigo-400 mr-4 rounded-full\"></div>\n                  Photography Tips\n                </h2>\n                <div className=\"space-y-4\">\n                  <div className=\"p-4 glass rounded-lg\">\n                    <h3 className=\"font-semibold text-indigo-200\">The Rule of Thirds</h3>\n                    <p className=\"text-indigo-300 mt-1\">Place key elements along the gridlines or at their intersections.</p>\n                  </div>\n                  \n                  <div className=\"p-4 glass rounded-lg\">\n                    <h3 className=\"font-semibold text-indigo-200\">Leading Lines</h3>\n                    <p className=\"text-indigo-300 mt-1\">Use natural lines to guide the viewer's eye to the main subject.</p>\n                  </div>\n                  \n                  <div className=\"p-4 glass rounded-lg\">\n                    <h3 className=\"font-semibold text-indigo-200\">Framing</h3>\n                    <p className=\"text-indigo-300 mt-1\">Use elements in the scene to create a natural frame around your subject.</p>\n                  </div>\n                  \n                  <div className=\"p-4 glass rounded-lg\">\n                    <h3 className=\"font-semibold text-indigo-200\">Balance</h3>\n                    <p className=\"text-indigo-300 mt-1\">Create visual harmony by distributing visual weight throughout the frame.</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"space-y-8\">\n          <div className=\"glass-dark rounded-xl p-8 shadow-lg mb-8 relative overflow-hidden\">\n            <div className=\"absolute -bottom-20 -left-20 w-80 h-80 bg-indigo-600 rounded-full mix-blend-screen filter blur-[80px] opacity-10\"></div>\n            <div className=\"absolute -top-20 -right-20 w-80 h-80 bg-purple-600 rounded-full mix-blend-screen filter blur-[80px] opacity-10\"></div>\n            \n            <div className=\"flex justify-between items-center mb-8\">\n              <h2 className=\"text-3xl font-bold text-indigo-100 flex items-center\">\n                <div className=\"w-2 h-8 bg-gradient-to-b from-indigo-400 to-purple-400 mr-4 rounded-full\"></div>\n                Results & Analysis\n              </h2>\n              <button\n                onClick={() => setShowOriginal(!showOriginal)}\n                className=\"px-4 py-2 glass text-indigo-100 rounded-lg hover:text-white transition-all duration-300 transform hover:scale-105\"\n              >\n                {showOriginal ? \"Hide Original\" : \"View Original\"}\n              </button>\n            </div>\n            \n            {showOriginal && (\n              <div className=\"mb-8 border border-indigo-800/30 rounded-lg overflow-hidden\">\n                <img \n                  src={tutorialImage.imageUrl} \n                  alt=\"Original\" \n                  className=\"w-full h-auto\"\n                  onLoad={() => handleImageLoad('original')}\n                />\n                {!imagesLoaded['original'] && (\n                  <div className=\"absolute inset-0 flex items-center justify-center bg-black/40 backdrop-blur-sm\">\n                    <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-indigo-500 border-t-transparent\"></div>\n                  </div>\n                )}\n              </div>\n            )}\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 relative\">\n              {/* Connected journey line */}\n              <div className=\"absolute top-1/2 left-0 right-0 h-0.5 bg-gradient-to-r from-transparent via-indigo-500/30 to-transparent hidden md:block\"></div>\n              \n              {/* User's Frame */}\n              <div className=\"glass border border-indigo-800/30 rounded-xl overflow-hidden relative group\">\n                <div className=\"absolute inset-0 bg-gradient-to-tr from-indigo-600/5 to-purple-600/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                <div className=\"relative\" style={{ paddingBottom: isHorizontal ? `${(375/667) * 100}%` : `${(667/375) * 100}%` }}>\n                  {renderFramedImage(\n                    tutorialImage.imageUrl,\n                    cropData,\n                    \"Your Frame\",\n                    \"user-frame\"\n                  )}\n                </div>\n                <div className=\"p-6 relative\">\n                  <h3 className=\"font-bold text-lg text-indigo-100\">Your Frame</h3>\n                  {score !== null && (\n                    <div className=\"mt-4\">\n                      <div className=\"w-full bg-indigo-900/50 rounded-full h-3 mt-2 overflow-hidden\">\n                        <div \n                          className={`h-3 rounded-full ${\n                            score >= 80 ? 'bg-gradient-to-r from-emerald-400 to-emerald-500' : \n                            score >= 60 ? 'bg-gradient-to-r from-amber-400 to-amber-500' : \n                            'bg-gradient-to-r from-rose-400 to-rose-500'\n                          }`}\n                          style={{ width: `${score}%` }}\n                        ></div>\n                      </div>\n                      <div className=\"flex justify-between mt-1\">\n                        <span className=\"text-sm text-indigo-300\">Score</span>\n                        <span className=\"font-bold text-indigo-100\">{score}/100</span>\n                      </div>\n                      <div className=\"mt-4 p-4 glass rounded-lg\">\n                        {feedback}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n              \n              {/* AI's Optimal Frame */}\n              {optimalFrame && (\n                <div className=\"glass border border-indigo-800/30 rounded-xl overflow-hidden relative group\">\n                  <div className=\"absolute inset-0 bg-gradient-to-tr from-indigo-600/5 to-purple-600/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                  <div className=\"relative\" style={{ paddingBottom: isHorizontal ? `${(375/667) * 100}%` : `${(667/375) * 100}%` }}>\n                    {renderFramedImage(\n                      tutorialImage.imageUrl,\n                      optimalFrame,\n                      \"AI Suggested Frame\",\n                      \"ai-frame\"\n                    )}\n                  </div>\n                  <div className=\"p-6 relative\">\n                    <h3 className=\"font-bold text-lg text-indigo-100\">AI's Suggested Frame</h3>\n                    <p className=\"mt-2 text-sm text-indigo-300\">\n                      This is the optimal frame calculated by our AI based on photography principles.\n                    </p>\n                  </div>\n                </div>\n              )}\n              \n              {/* Most Popular Frame */}\n              {popularFrame && (\n                <div className=\"glass border border-indigo-800/30 rounded-xl overflow-hidden relative group\">\n                  <div className=\"absolute inset-0 bg-gradient-to-tr from-indigo-600/5 to-purple-600/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                  <div className=\"relative\" style={{ paddingBottom: isHorizontal ? `${(375/667) * 100}%` : `${(667/375) * 100}%` }}>\n                    {renderFramedImage(\n                      tutorialImage.imageUrl,\n                      {\n                        x: popularFrame.frameX,\n                        y: popularFrame.frameY,\n                        width: popularFrame.frameWidth,\n                        height: popularFrame.frameHeight\n                      },\n                      \"Community Favorite\",\n                      \"popular-frame\"\n                    )}\n                  </div>\n                  <div className=\"p-6 relative\">\n                    <h3 className=\"font-bold text-lg text-indigo-100\">Community's Favorite</h3>\n                    <p className=\"mt-2 text-sm text-indigo-300\">\n                      This frame has received the most likes from the community.\n                    </p>\n                    <div className=\"mt-4 flex items-center\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-rose-400 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fillRule=\"evenodd\" d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\" clipRule=\"evenodd\" />\n                      </svg>\n                      <span className=\"font-bold text-indigo-100\">{popularFrame.likes} likes</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"flex justify-center mt-12\">\n              <button\n                onClick={handleReset}\n                className=\"px-6 py-3 glass text-indigo-100 rounded-full hover:text-white transition-all duration-300 transform hover:scale-105 hover:shadow-[0_0_15px_rgba(99,102,241,0.5)]\"\n              >\n                Try Again\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Learning hints */}\n      {step === 'framing' && (\n        <div className=\"mt-8 glass rounded-xl p-6 border border-indigo-800/30 shadow-lg\">\n          <h2 className=\"text-xl font-semibold mb-4 text-indigo-100 flex items-center\">\n            <div className=\"w-1 h-6 bg-gradient-to-b from-indigo-400 to-purple-400 mr-3 rounded-full\"></div>\n            Photography Framing Challenge\n          </h2>\n          <p className=\"text-indigo-300 mb-6\">\n            Drag the frame to position it over the most visually appealing part of the image. \n            Use the corner handles to resize if needed.\n          </p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h3 className=\"font-medium text-indigo-200 mb-3 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 text-indigo-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                What to look for:\n              </h3>\n              <ul className=\"space-y-2 text-indigo-300\">\n                <li className=\"flex items-start\">\n                  <svg className=\"h-5 w-5 text-indigo-400 mr-2 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <span>Find the main subject and ensure it's properly positioned</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <svg className=\"h-5 w-5 text-indigo-400 mr-2 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <span>Use the rule of thirds - align key elements with the grid lines</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <svg className=\"h-5 w-5 text-indigo-400 mr-2 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <span>Look for natural framing opportunities within the scene</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <svg className=\"h-5 w-5 text-indigo-400 mr-2 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  <span>Consider the visual flow and balance of the composition</span>\n                </li>\n              </ul>\n            </div>\n            <div>\n              <h3 className=\"font-medium text-indigo-200 mb-3 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 text-indigo-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n                </svg>\n                Common mistakes to avoid:\n              </h3>\n              <ul className=\"space-y-2 text-indigo-300\">\n                <li className=\"flex items-start\">\n                  <svg className=\"h-5 w-5 text-rose-400 mr-2 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                  <span>Cutting off important elements of the scene</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <svg className=\"h-5 w-5 text-rose-400 mr-2 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                  <span>Centering the subject when rule of thirds would work better</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <svg className=\"h-5 w-5 text-rose-400 mr-2 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                  <span>Including too many distracting elements</span>\n                </li>\n                <li className=\"flex items-start\">\n                  <svg className=\"h-5 w-5 text-rose-400 mr-2 flex-shrink-0\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                  <span>Not considering the visual weight and balance</span>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TutorialFrame; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1353, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1359, "column": 0}, "map": {"version":3,"sources":["file:///Users/nathanchen/Desktop/Projects/Figart-AI/Figart-AI/src/app/tutorial/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport TutorialFrame from '@/components/TutorialFrame';\nimport { TutorialImage, Frame } from '@/types';\nimport Image from 'next/image';\n\n// Sample tutorial images for the static prototype\nconst SAMPLE_TUTORIAL_IMAGES: TutorialImage[] = [\n  {\n    id: '1',\n    imageUrl: 'https://images.unsplash.com/photo-1506744038136-46273834b3fb',\n    title: 'Mountain Landscape',\n    description: 'Find the best frame to capture this beautiful mountain landscape.',\n  },\n  {\n    id: '2',\n    imageUrl: 'https://images.unsplash.com/photo-1540270776932-e72e7c2d11cd',\n    title: 'Cityscape at Night',\n    description: 'Capture the vibrant city lights in the best possible frame.',\n  },\n  {\n    id: '3',\n    imageUrl: 'https://images.unsplash.com/photo-1501594907352-04cda38ebc29',\n    title: 'Ocean Waves',\n    description: 'Frame the perfect shot of these powerful ocean waves.',\n  },\n];\n\n// Sample popular frames (would typically come from the database)\nconst SAMPLE_POPULAR_FRAMES: Record<string, Frame> = {\n  '1': {\n    id: 'pop1',\n    originImageUrl: 'https://images.unsplash.com/photo-1506744038136-46273834b3fb',\n    frameX: 300,\n    frameY: 150,\n    frameWidth: 375,\n    frameHeight: 667,\n    userId: 'user1',\n    createdAt: new Date(),\n    likes: 42,\n  },\n  '2': {\n    id: 'pop2',\n    originImageUrl: 'https://images.unsplash.com/photo-1540270776932-e72e7c2d11cd',\n    frameX: 400,\n    frameY: 100,\n    frameWidth: 375,\n    frameHeight: 667,\n    userId: 'user1',\n    createdAt: new Date(),\n    likes: 28,\n  },\n  '3': {\n    id: 'pop3',\n    originImageUrl: 'https://images.unsplash.com/photo-1501594907352-04cda38ebc29',\n    frameX: 350,\n    frameY: 200,\n    frameWidth: 375,\n    frameHeight: 667,\n    userId: 'user1',\n    createdAt: new Date(),\n    likes: 35,\n  },\n};\n\n// Pre-calculated optimal frames (in a real app, these would come from the AI)\nconst OPTIMAL_FRAMES: Record<string, { x: number; y: number; width: number; height: number }> = {\n  '1': { x: 250, y: 200, width: 375, height: 667 },\n  '2': { x: 420, y: 80, width: 375, height: 667 },\n  '3': { x: 300, y: 150, width: 375, height: 667 },\n};\n\n// Horizontal frames option\nconst HORIZONTAL_OPTIMAL_FRAMES: Record<string, { x: number; y: number; width: number; height: number }> = {\n  '1': { x: 200, y: 250, width: 667, height: 375 },\n  '2': { x: 100, y: 300, width: 667, height: 375 },\n  '3': { x: 150, y: 200, width: 667, height: 375 },\n};\n\nexport default function TutorialPage() {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isHorizontal, setIsHorizontal] = useState(false);\n  const [frameResetKey, setFrameResetKey] = useState(0);\n\n  const currentImage = SAMPLE_TUTORIAL_IMAGES[currentImageIndex];\n  const optimalFrame = isHorizontal \n    ? HORIZONTAL_OPTIMAL_FRAMES[currentImage.id] \n    : OPTIMAL_FRAMES[currentImage.id];\n  const popularFrame = SAMPLE_POPULAR_FRAMES[currentImage.id];\n\n  // Simulate loading the optimal frames\n  useEffect(() => {\n    setIsLoading(true);\n    \n    // Simulate AI computation with a slight delay\n    const timer = setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n    \n    return () => clearTimeout(timer);\n  }, [currentImageIndex]);\n\n  const handleSubmitFrame = async (frame: Omit<Frame, 'id' | 'userId' | 'user' | 'createdAt' | 'likes'>) => {\n    // In a real application, this would submit the frame to your backend API\n    console.log('Submitting frame:', frame);\n    \n    // Simulate a delay for the API call\n    await new Promise(resolve => setTimeout(resolve, 800));\n    \n    return Promise.resolve();\n  };\n\n  const handleNextImage = () => {\n    setFrameResetKey(prev => prev + 1); // Reset the TutorialFrame component\n    setCurrentImageIndex((prevIndex) => (prevIndex + 1) % SAMPLE_TUTORIAL_IMAGES.length);\n  };\n\n  const toggleOrientation = () => {\n    setIsHorizontal(!isHorizontal);\n    setFrameResetKey(prev => prev + 1); // Reset the frame when changing orientation\n  };\n\n  return (\n    <div className=\"min-h-screen py-12 relative\">\n      {/* Journey path visualization */}\n      <div className=\"absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-gradient-to-b from-transparent via-indigo-400 to-transparent opacity-30 hidden md:block\"></div>\n      \n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative\">\n        <div className=\"text-center mb-10\">\n          <div className=\"inline-block relative mb-6\">\n            <span className=\"inline-block w-20 h-20 rounded-full bg-indigo-500 opacity-20 absolute blur-2xl -z-10\"></span>\n            <h1 className=\"text-5xl font-extrabold tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-indigo-400 to-purple-400\">\n              Master Your Photography\n            </h1>\n          </div>\n          <p className=\"mt-4 max-w-3xl mx-auto text-xl text-indigo-200\">\n            Learn how to frame the perfect photo by practicing with our interactive tool.\n          </p>\n        </div>\n        \n        {/* Visual journey step indicator */}\n        <div className=\"flex justify-center mb-8\">\n          <div className=\"flex items-center space-x-3\">\n            {SAMPLE_TUTORIAL_IMAGES.map((_, index) => (\n              <div key={index} className=\"relative flex flex-col items-center\">\n                <div \n                  className={`w-4 h-4 rounded-full ${\n                    index < currentImageIndex \n                      ? 'bg-indigo-400' \n                      : index === currentImageIndex \n                        ? 'bg-indigo-500 animate-pulse' \n                        : 'bg-indigo-800'\n                  } transition-colors duration-500`}\n                ></div>\n                {index < SAMPLE_TUTORIAL_IMAGES.length - 1 && (\n                  <div className=\"w-12 h-0.5 bg-indigo-700 absolute left-4 top-2\"></div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        <div className=\"flex justify-center mb-6 space-x-4\">\n          <button\n            onClick={toggleOrientation}\n            className=\"glass px-6 py-3 rounded-full text-indigo-200 hover:text-white transition-all duration-300 hover:shadow-[0_0_15px_rgba(99,102,241,0.5)] focus:outline-none flex items-center space-x-2 transform hover:scale-105\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5v-4m0 0h-4m4 0l-5-5\" />\n            </svg>\n            <span>{isHorizontal ? \"Switch to Vertical\" : \"Switch to Horizontal\"}</span>\n          </button>\n        </div>\n        \n        <div className=\"glass-dark rounded-3xl overflow-hidden border border-indigo-900/50 shadow-[0_0_30px_rgba(79,70,229,0.15)]\">\n          {isLoading ? (\n            <div className=\"flex items-center justify-center h-[800px]\">\n              <div className=\"text-center\">\n                <div className=\"inline-block animate-spin rounded-full h-16 w-16 border-4 border-indigo-500 border-t-transparent\"></div>\n                <p className=\"mt-4 text-xl text-indigo-300\">Preparing your tutorial...</p>\n              </div>\n            </div>\n          ) : (\n            <TutorialFrame\n              key={`${currentImageIndex}-${frameResetKey}-${isHorizontal ? 'h' : 'v'}`}\n              tutorialImage={currentImage}\n              onSubmit={handleSubmitFrame}\n              optimalFrame={optimalFrame}\n              popularFrame={popularFrame}\n              isHorizontal={isHorizontal}\n            />\n          )}\n        </div>\n        \n        <div className=\"mt-10 text-center\">\n          <p className=\"text-xl text-indigo-300 mb-6\">\n            Tutorial Progress: <span className=\"font-semibold text-indigo-100\">{currentImageIndex + 1}</span> of <span className=\"font-semibold\">{SAMPLE_TUTORIAL_IMAGES.length}</span>\n          </p>\n          <div className=\"flex justify-center\">\n            <button\n              onClick={handleNextImage}\n              className=\"relative px-8 py-4 rounded-full bg-gradient-to-r from-indigo-600 to-purple-600 text-white text-lg shadow-lg transition-all duration-300 transform hover:scale-105 hover:shadow-[0_0_20px_rgba(99,102,241,0.6)] focus:outline-none focus:ring-2 focus:ring-indigo-400 focus:ring-offset-2 focus:ring-offset-indigo-900\"\n            >\n              <span className=\"relative z-10\">Next Tutorial Image</span>\n              <span className=\"absolute inset-0 rounded-full bg-gradient-to-r from-indigo-600 to-purple-600 opacity-75 blur-sm\"></span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1767, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}