{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nathanchen/Desktop/Projects/Figart-AI/Figart-AI/src/app/community/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport Link from 'next/link';\nimport { apiRequest, getAuthToken } from '@/utils/auth';\nimport { useAuth } from '@/contexts/AuthContext';\n\ninterface Post {\n  id: number;\n  photo_uuid: string;\n  user_id: string;\n  created_at: string;\n  thumbs_up: number;\n}\n\nexport default function CommunityPage() {\n  const { username } = useAuth();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const sortDropdownRef = useRef<HTMLDivElement>(null);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [likedPosts, setLikedPosts] = useState<number[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [uploading, setUploading] = useState(false);\n  const [sortMethod, setSortMethod] = useState<'recent' | 'likes'>('recent');\n  const [showSortDropdown, setShowSortDropdown] = useState(false);\n  const [page, setPage] = useState(0);\n  const [hasMorePosts, setHasMorePosts] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (sortDropdownRef.current && !sortDropdownRef.current.contains(event.target as Node)) {\n        setShowSortDropdown(false);\n      }\n    }\n    \n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Clear error after 5 seconds\n  useEffect(() => {\n    if (error) {\n      const timer = setTimeout(() => {\n        setError(null);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [error]);\n\n  // Fetch posts and user's liked posts when component mounts or username changes\n  useEffect(() => {\n    fetchPosts(true);\n    \n    // Only fetch liked posts if user is logged in\n    if (username) {\n      fetchUserLikedPosts();\n    } else {\n      // Clear liked posts when user logs out\n      setLikedPosts([]);\n      localStorage.removeItem('likedPosts');\n    }\n  }, [username, sortMethod]);\n\n  const fetchUserLikedPosts = async () => {\n    if (!username) return;\n    \n    try {\n      const response = await apiRequest('/users/liked-posts/');\n      if (response && response.liked_posts) {\n        setLikedPosts(response.liked_posts as number[]);\n        localStorage.setItem('likedPosts', JSON.stringify(response.liked_posts));\n      }\n    } catch (err) {\n      console.error('Error fetching liked posts:', err);\n      // Fallback to localStorage if API fails\n      const savedLikes = localStorage.getItem('likedPosts');\n      if (savedLikes) {\n        try {\n          setLikedPosts(JSON.parse(savedLikes));\n        } catch (e) {\n          console.error('Error loading liked posts from localStorage', e);\n        }\n      }\n    }\n  };\n\n  const fetchPosts = async (reset: boolean = true) => {\n    try {\n      if (reset) {\n        setLoading(true);\n        setPage(0);\n      } else {\n        setLoadingMore(true);\n      }\n      \n      // Get posts with sorting and pagination\n      const currentPage = reset ? 0 : page;\n      const response = await apiRequest(`/posts/?sort_by=${sortMethod}&page=${currentPage}`);\n      \n      if (reset) {\n        setPosts(response.posts);\n      } else {\n        setPosts(prev => [...prev, ...response.posts]);\n      }\n      \n      // Check if there are more posts to load\n      setHasMorePosts(response.pagination.page < response.pagination.pages - 1);\n      setTotalPages(response.pagination.pages);\n      \n      // If not resetting, increment the page for next load\n      if (!reset) {\n        setPage(prev => prev + 1);\n      }\n    } catch (err) {\n      setError('Failed to load posts');\n      console.error('Error fetching posts:', err);\n    } finally {\n      setLoading(false);\n      setLoadingMore(false);\n    }\n  };\n\n  // Load specific page\n  const goToPage = (pageNumber: number) => {\n    if (pageNumber !== page && !loading && !loadingMore) {\n      setPage(pageNumber);\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n      \n      // Fetch the selected page\n      try {\n        setLoading(true);\n        apiRequest(`/posts/?sort_by=${sortMethod}&page=${pageNumber}`)\n          .then(response => {\n            setPosts(response.posts);\n            setHasMorePosts(response.pagination.page < response.pagination.pages - 1);\n            setTotalPages(response.pagination.pages);\n          })\n          .catch(err => {\n            setError('Failed to load posts');\n            console.error('Error fetching posts:', err);\n          })\n          .finally(() => {\n            setLoading(false);\n          });\n      } catch (err) {\n        setError('Failed to load posts');\n        console.error('Error fetching posts:', err);\n        setLoading(false);\n      }\n    }\n  };\n\n  // Generate pagination items\n  const renderPaginationItems = () => {\n    const items = [];\n    const maxVisiblePages = 5; // Maximum number of page buttons to show\n    \n    // Always show first page\n    items.push(\n      <button\n        key=\"first\"\n        onClick={() => goToPage(0)}\n        className={`px-3 py-1 rounded-md ${page === 0 ? 'bg-indigo-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-100'}`}\n        disabled={loading}\n      >\n        1\n      </button>\n    );\n    \n    // If there are only 2 pages, just show page 1 and 2 without duplication\n    if (totalPages === 2) {\n      items.push(\n        <button\n          key=\"page2\"\n          onClick={() => goToPage(1)}\n          className={`px-3 py-1 rounded-md ${page === 1 ? 'bg-indigo-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-100'}`}\n          disabled={loading}\n        >\n          2\n        </button>\n      );\n      return items;\n    }\n    \n    // For more than 2 pages, continue with the regular logic\n    // Calculate range of pages to show\n    let startPage = Math.max(1, page - Math.floor(maxVisiblePages / 2));\n    let endPage = Math.min(totalPages - 1, startPage + maxVisiblePages - 2);\n    \n    // Adjust start if we're near the end\n    if (endPage - startPage < maxVisiblePages - 2) {\n      startPage = Math.max(1, endPage - (maxVisiblePages - 2));\n    }\n    \n    // Add ellipsis after first page if needed\n    if (startPage > 1) {\n      items.push(\n        <span key=\"ellipsis1\" className=\"px-2\">\n          ...\n        </span>\n      );\n    }\n    \n    // Add page numbers\n    for (let i = startPage; i <= endPage; i++) {\n      items.push(\n        <button\n          key={i}\n          onClick={() => goToPage(i)}\n          className={`px-3 py-1 rounded-md ${page === i ? 'bg-indigo-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-100'}`}\n          disabled={loading}\n        >\n          {i + 1}\n        </button>\n      );\n    }\n    \n    // Add ellipsis before last page if needed\n    if (endPage < totalPages - 1) {\n      items.push(\n        <span key=\"ellipsis2\" className=\"px-2\">\n          ...\n        </span>\n      );\n    }\n    \n    // Always show last page if there's more than one page\n    if (totalPages > 2) {\n      items.push(\n        <button\n          key=\"last\"\n          onClick={() => goToPage(totalPages - 1)}\n          className={`px-3 py-1 rounded-md ${page === totalPages - 1 ? 'bg-indigo-600 text-white' : 'bg-white text-gray-700 hover:bg-gray-100'}`}\n          disabled={loading}\n        >\n          {totalPages}\n        </button>\n      );\n    }\n    \n    return items;\n  };\n\n  // Handle sort method change\n  const handleSortMethodChange = (method: 'recent' | 'likes') => {\n    if (method !== sortMethod) {\n      setSortMethod(method);\n      setShowSortDropdown(false);\n      \n      // Reset page to 0 and fetch with new sort method\n      setPage(0);\n      setLoading(true);\n      \n      apiRequest(`/posts/?sort_by=${method}&page=0`)\n        .then(response => {\n          setPosts(response.posts);\n          setHasMorePosts(response.pagination.page < response.pagination.pages - 1);\n          setTotalPages(response.pagination.pages);\n        })\n        .catch(err => {\n          setError('Failed to load posts');\n          console.error('Error fetching posts:', err);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    } else {\n      setShowSortDropdown(false);\n    }\n  };\n\n  const handleUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    try {\n      setUploading(true);\n      setError(null);\n      \n      // Get the auth token\n      const token = getAuthToken();\n      if (!token) {\n        throw new Error('Not authenticated');\n      }\n      \n      // Create FormData for file upload\n      const formData = new FormData();\n      formData.append('file', file);\n\n      // Upload the photo and create post in one step\n      const response = await fetch('http://localhost:8000/posts/create/', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => null);\n        throw new Error(errorData?.detail || 'Failed to create post');\n      }\n\n      // Refresh the posts list\n      await fetchPosts();\n      \n      // Reset file input\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    } catch (err) {\n      console.error('Error uploading:', err);\n      setError(err instanceof Error ? err.message : 'Failed to upload photo');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleLike = async (postId: number) => {\n    if (!username) {\n      setError('You must be logged in to like posts');\n      return;\n    }\n\n    try {\n      setError(null);\n      const isLiked = likedPosts.includes(postId);\n      const endpoint = isLiked ? `/posts/${postId}/thumbs-down/` : `/posts/${postId}/thumbs-up/`;\n      \n      // Optimistically update UI\n      const newLikedPosts = isLiked ? likedPosts.filter(id => id !== postId) : [...likedPosts, postId];\n      setPosts(posts.map(post => \n        post.id === postId ? { ...post, thumbs_up: isLiked ? Math.max(0, post.thumbs_up - 1) : post.thumbs_up + 1 } : post\n      ));\n      setLikedPosts(newLikedPosts);\n      \n      // Make API request\n      const response = await apiRequest(endpoint, {\n        method: 'POST',\n      });\n\n      if (!response) {\n        throw new Error('Failed to update like status');\n      }\n      \n      // Save to localStorage on success\n      localStorage.setItem('likedPosts', JSON.stringify(newLikedPosts));\n      \n    } catch (err) {\n      console.error('Error liking post:', err);\n      \n      // Revert optimistic update on error\n      await fetchPosts();\n      await fetchUserLikedPosts();\n      \n      // Show error message\n      if (err instanceof Error) {\n        if (err.message.includes(\"You already thumbed up\") || \n            err.message.includes(\"You haven't thumbed up\")) {\n          // If the error is due to inconsistent state, refresh the posts and liked posts\n          setError(\"Your like status was out of sync. We've refreshed the data.\");\n        } else {\n          setError(err.message);\n        }\n      } else {\n        setError('Failed to like post');\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen py-12\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {error && (\n          <div className=\"mb-6 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n            <strong className=\"font-bold\">Error: </strong>\n            <span className=\"block sm:inline\">{error}</span>\n            <button \n              className=\"absolute top-0 bottom-0 right-0 px-4 py-3\"\n              onClick={() => setError(null)}\n              aria-label=\"Close error message\"\n            >\n              <svg className=\"fill-current h-6 w-6 text-red-500\" role=\"button\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                <title>Close</title>\n                <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\"/>\n              </svg>\n            </button>\n          </div>\n        )}\n        \n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-extrabold text-white sm:text-5xl sm:tracking-tight lg:text-6xl\">\n            Photography Community\n          </h1>\n          <p className=\"mt-4 max-w-2xl mx-auto text-xl text-indigo-200\">\n            Share your photos, get feedback, and be inspired by other photographers.\n          </p>\n        </div>\n        \n        <div className=\"bg-white rounded-xl shadow-md p-6 mb-12\">\n          <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-6\">\n            <div>\n              <h2 className=\"text-2xl font-bold text-gray-900\">\n                {sortMethod === 'recent' ? 'Recent Photos' : 'Most Liked Photos'}\n              </h2>\n              <p className=\"text-gray-500\">\n                {sortMethod === 'recent' \n                  ? 'Explore the latest uploads from our community' \n                  : 'Discover the most popular photos in our community'}\n              </p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"relative\" ref={sortDropdownRef}>\n                <button\n                  onClick={() => setShowSortDropdown(!showSortDropdown)}\n                  className=\"px-4 py-2 bg-white border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors flex items-center\"\n                >\n                  <span>Sort by: {sortMethod === 'recent' ? 'Recent' : 'Most Liked'}</span>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-4 h-4 ml-2\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\" />\n                  </svg>\n                </button>\n                \n                {showSortDropdown && (\n                  <div className=\"absolute right-0 mt-1 w-48 bg-white border border-gray-200 rounded-md shadow-lg z-10\">\n                    <button\n                      onClick={() => {\n                        handleSortMethodChange('recent');\n                        setShowSortDropdown(false);\n                      }}\n                      className={`block w-full text-left px-4 py-2 hover:bg-gray-100 ${sortMethod === 'recent' ? 'bg-indigo-50 text-indigo-700' : 'text-gray-700'}`}\n                    >\n                      Recent\n                    </button>\n                    <button\n                      onClick={() => {\n                        handleSortMethodChange('likes');\n                        setShowSortDropdown(false);\n                      }}\n                      className={`block w-full text-left px-4 py-2 hover:bg-gray-100 ${sortMethod === 'likes' ? 'bg-indigo-50 text-indigo-700' : 'text-gray-700'}`}\n                    >\n                      Most Liked\n                    </button>\n                  </div>\n                )}\n              </div>\n              {username && (\n                <div className=\"relative\">\n                  <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    onChange={handleUpload}\n                    accept=\"image/*\"\n                    className=\"hidden\"\n                    aria-label=\"Upload photo\"\n                  />\n                  <button\n                    onClick={() => fileInputRef.current?.click()}\n                    disabled={uploading}\n                    className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors disabled:bg-indigo-400\"\n                  >\n                    {uploading ? 'Uploading...' : 'Post a Picture'}\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {loading ? (\n            <div className=\"text-center py-12\">\n              <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-4 border-indigo-500 border-t-transparent\"></div>\n              <p className=\"mt-2 text-gray-500\">Loading posts...</p>\n            </div>\n          ) : posts.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <p className=\"text-gray-500\">No posts yet. Be the first to share a photo!</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {posts.map((post) => (\n                <div key={post.id} className=\"border rounded-xl overflow-hidden shadow-sm hover:shadow-md transition\">\n                  <div className=\"relative pb-[75%] bg-gray-100\">\n                    <Link href={`/posts/${post.id}`}>\n                      <img\n                        src={`http://localhost:8000/photos/${post.photo_uuid}`}\n                        alt={`Post ${post.id}`}\n                        className=\"absolute inset-0 w-full h-full object-cover cursor-pointer\"\n                      />\n                    </Link>\n                  </div>\n                  <div className=\"p-4\">\n                    <div className=\"flex justify-between items-start\">\n                      <div className=\"flex items-center\">\n                        <span className=\"text-sm font-medium text-gray-700\">By: {post.user_id}</span>\n                      </div>\n                      <button \n                        onClick={() => handleLike(post.id)}\n                        className=\"flex items-center text-gray-500 hover:text-red-500 transition-colors focus:outline-none\"\n                        aria-label={likedPosts.includes(post.id) ? \"Unlike post\" : \"Like post\"}\n                      >\n                        {likedPosts.includes(post.id) ? (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"w-5 h-5 mr-1 text-red-500\">\n                            <path d=\"M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z\" />\n                          </svg>\n                        ) : (\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5 mr-1\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z\" />\n                          </svg>\n                        )}\n                        <span>{post.thumbs_up}</span>\n                      </button>\n                    </div>\n                    <div className=\"mt-4 flex justify-between\">\n                      <div className=\"text-sm text-gray-500\">\n                        {new Date(post.created_at).toLocaleDateString('en-US', {\n                          year: 'numeric',\n                          month: 'long',\n                          day: 'numeric',\n                          hour: '2-digit',\n                          minute: '2-digit'\n                        })}\n                      </div>\n                      <Link href={`/posts/${post.id}`} className=\"text-indigo-600 hover:text-indigo-800 text-sm font-medium\">\n                        View Details\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n      {totalPages > 1 && (\n        <div className=\"flex justify-center my-8\">\n          <div className=\"inline-flex items-center gap-2 bg-white p-2 rounded-lg shadow\">\n            <button\n              onClick={() => goToPage(Math.max(0, page - 1))}\n              disabled={page === 0 || loading}\n              className=\"px-3 py-1 rounded-md bg-white text-gray-700 hover:bg-gray-100 disabled:opacity-50 disabled:hover:bg-white\"\n              aria-label=\"Previous page\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 19.5L8.25 12l7.5-7.5\" />\n              </svg>\n            </button>\n            \n            {renderPaginationItems()}\n            \n            <button\n              onClick={() => goToPage(Math.min(totalPages - 1, page + 1))}\n              disabled={page === totalPages - 1 || loading}\n              className=\"px-3 py-1 rounded-md bg-white text-gray-700 hover:bg-gray-100 disabled:opacity-50 disabled:hover:bg-white\"\n              aria-label=\"Next page\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-5 h-5\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 925, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}