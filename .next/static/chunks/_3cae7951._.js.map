{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/allen/Desktop/Figart-AI/src/app/login/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\nimport { login, signup } from '@/utils/auth';\nimport { useAuth } from '@/contexts/AuthContext';\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const { setUsername } = useAuth();\n  const [isLogin, setIsLogin] = useState(true);\n  const [username, setUsernameInput] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    if (!isLogin) {\n      // Validate passwords match for signup\n      if (password !== confirmPassword) {\n        setError('Passwords do not match');\n        return;\n      }\n      // Validate password strength\n      if (password.length < 8) {\n        setError('Password must be at least 8 characters long');\n        return;\n      }\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (isLogin) {\n        await login(username, password);\n      } else {\n        await signup(username, password);\n      }\n      // Store username and update context\n      localStorage.setItem('username', username);\n      setUsername(username);\n      // Redirect to home page after successful login/signup\n      router.push('/');\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'An unexpected error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleModeSwitch = () => {\n    setIsLogin(!isLogin);\n    setError('');\n    setPassword('');\n    setConfirmPassword('');\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-black to-indigo-950\">\n      <div className=\"w-full max-w-sm\">\n        {/* Logo Section */}\n        <div className=\"text-center mb-8\">\n          <Link href=\"/\" className=\"inline-block\">\n            <h1 className=\"text-4xl font-bold text-white tracking-tight\">\n              FigArt <span className=\"text-indigo-400\">AI</span>\n            </h1>\n          </Link>\n        </div>\n\n        {/* Form Card */}\n        <div className=\"bg-white/5 backdrop-blur-xl rounded-2xl p-6 shadow-2xl shadow-black/40 border border-white/10\">\n          <h2 className=\"text-xl text-white font-medium mb-6\">\n            {isLogin ? 'Welcome back' : 'Create account'}\n          </h2>\n\n          {error && (\n            <div className=\"mb-6 text-sm text-red-400 bg-red-950/50 border border-red-500/20 rounded-lg p-3\">\n              {error}\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-white/70 mb-1.5\">\n                Username\n              </label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                value={username}\n                onChange={(e) => setUsernameInput(e.target.value)}\n                className=\"w-full bg-white/5 border border-white/10 rounded-lg px-3 py-2 text-white placeholder-white/30 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 focus:border-transparent transition-all\"\n                placeholder=\"Enter your username\"\n                required\n                disabled={isLoading}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-white/70 mb-1.5\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"w-full bg-white/5 border border-white/10 rounded-lg px-3 py-2 text-white placeholder-white/30 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 focus:border-transparent transition-all\"\n                placeholder={isLogin ? \"Enter your password\" : \"Create a password\"}\n                required\n                disabled={isLoading}\n              />\n              {!isLogin && (\n                <p className=\"mt-1 text-xs text-white/50\">\n                  Must be at least 8 characters long\n                </p>\n              )}\n            </div>\n\n            {!isLogin && (\n              <div>\n                <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-white/70 mb-1.5\">\n                  Confirm Password\n                </label>\n                <input\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  className=\"w-full bg-white/5 border border-white/10 rounded-lg px-3 py-2 text-white placeholder-white/30 focus:outline-none focus:ring-2 focus:ring-indigo-500/50 focus:border-transparent transition-all\"\n                  placeholder=\"Confirm your password\"\n                  required\n                  disabled={isLoading}\n                />\n              </div>\n            )}\n\n            {isLogin && (\n              <div className=\"flex justify-end\">\n                <Link\n                  href=\"/forgot-password\"\n                  className=\"text-sm text-indigo-400 hover:text-indigo-300 transition-colors\"\n                >\n                  Forgot password?\n                </Link>\n              </div>\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"w-full bg-indigo-500 hover:bg-indigo-600 text-white rounded-lg px-4 py-2.5 font-medium focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-transparent disabled:opacity-50 disabled:cursor-not-allowed transition-all\"\n            >\n              {isLoading ? (\n                <div className=\"flex items-center justify-center\">\n                  <svg className=\"animate-spin h-5 w-5 mr-2\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" fill=\"none\" />\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    />\n                  </svg>\n                  {isLogin ? 'Signing in...' : 'Creating account...'}\n                </div>\n              ) : (\n                <span>{isLogin ? 'Sign in' : 'Create account'}</span>\n              )}\n            </button>\n          </form>\n\n          <div className=\"mt-6 text-center\">\n            <button\n              onClick={handleModeSwitch}\n              className=\"text-sm text-indigo-400 hover:text-indigo-300 transition-colors\"\n              disabled={isLoading}\n            >\n              {isLogin\n                ? \"Don't have an account? Sign up\"\n                : 'Already have an account? Sign in'}\n            </button>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"mt-8 text-center text-sm text-white/40\">\n          By continuing, you agree to our{' '}\n          <Link href=\"/terms\" className=\"text-indigo-400 hover:text-indigo-300\">\n            Terms of Service\n          </Link>{' '}\n          and{' '}\n          <Link href=\"/privacy\" className=\"text-indigo-400 hover:text-indigo-300\">\n            Privacy Policy\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":["file:///Users/allen/Desktop/Figart-AI/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}